CREATE OR REPLACE PACKAGE BODY UBRR_XXI5.ubrr_check_taxdetails is

  /************************************************************************************************\
  --------------------------------------------------------------------------------------------------
  Дата              Автор            Описание
  ----------------  ---------------  ---------------------------------------------------------------
  15.03.2016        Емельянов В.К.   Создание пакета по заданию
                                     15-1641.2 https://redmine.lan.ubrr.ru/issues/29101
  24.03.2016 18:16  Емельянов В.К.    Доработки по замечениям тестировщиков
  25.03.2016 13:36  Чепель С.А.
  26.03.2016 13:36  Портнягин Д.Ю.   Добавил условие для КБК ".. при этом все знаки одновременно не могут принимать значение ноль"
  26.03.2016 16:50  Портнягин Д.Ю.   Добавлена отладка
  28.03.2016        Чепель С.А.      Допустимое значение буквы и цифры
  29.03.2016        Портнягин Д.Ю.   Добавлено исключение по физикам 40911-40913
  29.03.2016        Портнягин Д.Ю.   Поставил букву З вместо цифры 3
  12.04.2016        Чепель С.А.      Для нерезидента разрешен 10-значный ИНН
  09.12.2016        Фридьев П.В.     https://redmine.lan.ubrr.ru/issues/37939
  09.12.2016        Фридьев П.В.     https://redmine.lan.ubrr.ru/issues/37943
  09.12.2016        Фридьев П.В.     https://redmine.lan.ubrr.ru/issues/37829
  14.12.2016        Фридьев П.В.     https://redmine.lan.ubrr.ru/issues/37829
  14.12.2016        Макарова Л.Ю.    https://redmine.lan.ubrr.ru/issues/38267
                                     [16-2308.4] АБС "Бухгалтерия": Отключения контроля БИКа получателя и счет получателя по 107н
  10.01.2017        Ткачев Ф.В.      https://redmine.lan.ubrr.ru/issues/38596  Доработка АБС и ИБ по 107н (по ошибкам ГИС ГМП)
  22.04.2017        ubrr korolkov    [17-473] Указание информации в реквизитах распоряжений о переводе денежных средств
                                     в уплату платежей в бюджетную систему (107-Н)
  25.04.2017        ubrr korolkov    [17-473] В check_doc_pars добавлен p_doc_date
  17.09.2017        ubrr belosheykin 17-473.5 АБС: Указание информации в реквизитах распоряжений о переводе денежных
                                     средств в уплату платежей в бюджетную систему (107-Н) к 02.10.2017
  03.10.2017        ubrr korolkov    17-473.5 Поле 108
  03.11.2017        Ёлгин Ю.А.       [17-1423] АБС: Поле 108 в бюджетных платежах https://redmine.lan.ubrr.ru/issues/47827#note-6
  23.04.2018        Киселев А.А.     [17-1267.1] АБС: Поле 110 в распоряжениях о переводе средств
  18.11.2020        Зеленко С.А.     [20-82101.1]  АБС: Изменение счетов ТОФК с 01.01.2021
  24.01.2021        Фридьев П.В.     20-85443 Новая версия IBANK 2020.8.15
  27.01.2021        golovatyuk       [IM2711913-001] Разбор спецсчетов - нет реквизитов КПП, кор. счет
  01.02.2021        Зеленко С.А.     [DKBPA-38]    АБС (2 ЭТАП) : Изменение счетов ТОФК с 01.01.2021
  ----------------  ---------------  ---------------------------------------------------------------
  \************************************************************************************************/

procedure check_doc_pars(
  p_form_kind    number,   -- способ обработки,  0 - считать все ошибки критическими
  p_sender_acc   varchar2, -- 9
  p_receiver_acc varchar2, -- 17
  p_receiver_bik varchar2,
  p_60           varchar2, -- ИНН плательщика
  p_61           varchar2, -- ИНН получателя
  p_102          varchar2, -- КПП плательщика
  p_103          varchar2, -- КПП получателя
  p_104          varchar2, -- КБК
  p_105          varchar2, -- ОКТМО
  p_22           varchar2, -- Код УИН
  p_106          varchar2, -- Основание платежа
  p_108          varchar2, -- Идентификатор сведений о физическом лице или Номер документа основания платежа
  p_109          varchar2, -- Дата документа основания платежа
  p_101          varchar2, -- Статус составителя
  p_107          varchar2, -- Налоговый период
  p_doc_date     date,     -- Дата регистрации документа -- 25.04.2017 ubrr korolkov 17-473.1
  p_bo1          number default null, -- BO1 -- 17.09.2017 ubrr belosheykin 17-473.5

  p_result out varchar2,
  p_result_kind out number, -- 0 - ok, 1 - warning, 2 - error
  p_110          VARCHAR2 DEFAULT NULL, -- 23.04.2018 Киселев А.А. 17-1267.1] АБС: Поле 110 в распоряжениях о переводе средств
  p_bo2          NUMBER DEFAULT NULL
)
is
  -->> 17.09.2017 ubrr belosheykin 17-473.5
/*
  c_25_04_2017  constant date := to_date('25.04.2017', 'dd.mm.yyyy'); -- 25.04.2017 ubrr korolkov 17-473.1
  c_26_04_2017  constant date := to_date('16.05.2017', 'dd.mm.yyyy'); -- 25.04.2017 ubrr korolkov 17-473.1
*/
  c_25_04_2017  date;
  c_26_04_2017  date;
  c_02_10_2017  date;

  lc_110_Date   DATE := TO_DATE(pref.get_global_preference('UBRR_CHECK_TAX110'),'DD.MM.YYYY');-- 23.04.2018 Киселев А.А. [17-1267.1] АБС: Поле 110 в распоряжениях о переводе средств

  l_state_021017 Boolean := false;
  l_str_err_107  Varchar2(512);
  --<< 17.09.2017 ubrr belosheykin 17-473.5

  c_dummy_date      date;

  l_cnt             number;
  l_message_mode    number; -- 0 - критические ошибки, 1 - предупреждения

  l_sender_id       acc.iacccus%type;
  l_sender_kind     number; -- 0 - ФЛ, 1- ИП, 2 - ЮЛ
  l_sender_resident number; -- 1 - резидент, 0 - иностранная организация
  l_client_inn      cus.ccusnumnal%type;
  l_third_partie    boolean;

  l_warning         varchar2(4000);
  l_error           varchar2(4000);
  nRes              number;
  sMess             varchar2(256);
  -- Каждое предупреждение заканчивается переводом строки
  -- Выводится не более 3994 символов собственно предупреждений, и если все заполнены,
  -- то в последней строке дополнительно выводится "<...>\n"
  procedure add_string(p_str_main in out varchar2, p_str_add varchar2)
  is
    l_length_old number;
    l_length_add number;
  begin
/*
Если совместная длина старой строки и добавки равна или превышает 3900, то режем сумму и дописываем "<...>\n"
Если длина старой больше или равна 3900, то строка "<...>\n" уже дописана
*/
    l_length_old := nvl(length(p_str_main),0);
    if l_length_old < 3900 then
      l_length_add := nvl(length(p_str_add),0)+1; -- +1 - это под перевод строки
      if l_length_old + l_length_add < 3900 then
        p_str_main := p_str_main || p_str_add || chr(10);
      else
        p_str_main := p_str_main || substr(p_str_add, 1, 3900 - l_length_old -1)
          || chr(10) ||'<...>'||chr(10);
      end if;
    end if;
  end;


  procedure add_message(p_str varchar2) is
  BEGIN
    UBRR_CD_DEBUG_PKG.write_info('FORM.DOCUMENT.WRITEOFF', 'check_doc_pars add_message : p_str = ' || p_str);
    if l_message_mode = 0 then
      add_string(l_error, p_str);
    else
      add_string(l_warning, p_str);
    end if;
  end;

begin
  UBRR_CD_DEBUG_PKG.write_info('FORM.DOCUMENT.WRITEOFF', 'check_doc_pars: p_form_kind = ' || p_form_kind ||chr(10)||
                                                                         'p_sender_acc='||p_sender_acc ||chr(10)||
                                                                         'p_receiver_acc='||p_receiver_acc ||chr(10)||
                                                                         'p_receiver_bik='||p_receiver_bik ||chr(10)||
                                                                         'p_60='||p_60 ||chr(10)||
                                                                         'p_61='||p_61 ||chr(10)||
                                                                         'p_102='||p_102 ||chr(10)||
                                                                         'p_103='||p_103 ||chr(10)||
                                                                         'p_104='||p_104 ||chr(10)||
                                                                         'p_105='||p_105 ||chr(10)||
                                                                         'p_22='||p_22 ||chr(10)||
                                                                         'p_106='||p_106 ||chr(10)||
                                                                         'p_108='||p_108 ||chr(10)||
                                                                         'p_109='||p_109 ||chr(10)||
                                                                         'p_101='||p_101 ||chr(10)||
                                                                         'p_107='||p_107 ||chr(10)||
                                                                         'p_doc_date='||to_char(p_doc_date,'dd.mm.yyyy') ||chr(10)||
                                                                         'p_bo1='||p_bo1 ||chr(10)|| -->><< 17.09.2017 ubrr belosheykin 17-473.5
                                                                         'p_110='||p_110 ||chr(10)   -- 23.04.2018 Киселев А.А. [17-1267.1] АБС: Поле 110 в распоряжениях о переводе средств
                                );

  p_result_kind := 0;
  p_result  := null;
  l_warning := null;
  l_error   := null;

  -->> 17.09.2017 ubrr belosheykin 17-473.5
  c_25_04_2017 := to_date(Pref.Get_Preference(Preference => 'UBRR_CHECK_TAX250417',
                                              UserName => Pref.c_UniversUser), 'dd.mm.yyyy');
  c_26_04_2017 := to_date(Pref.Get_Preference(Preference => 'UBRR_CHECK_TAX160517',
                                              UserName => Pref.c_UniversUser), 'dd.mm.yyyy');
  c_02_10_2017 := to_date(Pref.Get_Preference(Preference => 'UBRR_CHECK_TAX021017',
                                              UserName => Pref.c_UniversUser), 'dd.mm.yyyy');

  if p_doc_date >= c_02_10_2017 then
    l_state_021017 := true;
  else
    l_state_021017 := false;
  end if;
  --<< 17.09.2017 ubrr belosheykin 17-473.5

  if regexp_like(p_sender_acc,   '^4(0[1-7]|0802|0807|0821|2309)') and -- Макарова Л.Ю. https://redmine.lan.ubrr.ru/issues/38267
      p_sender_acc not like '47416%' -->><< 28.03.2016 Чепель С.А. доп пожелания по исключению контроля платежей с невыясненных (47416)
     -->> 09.12.2016 Фридьев П.В. https://redmine.lan.ubrr.ru/issues/37939
     --                           https://redmine.lan.ubrr.ru/issues/37943
     -- regexp_like(p_receiver_bik, '^\d{6}00[012]')  and
   /*  (regexp_like(p_receiver_bik, '^\d{6}00[012]')
               or user in ('CLIENTBANK','IBANK2')) and*/ -- Макарова Л.Ю. https://redmine.lan.ubrr.ru/issues/38267
     --<< 09.12.2016 Фридьев П.В. https://redmine.lan.ubrr.ru/issues/37939
     --                           https://redmine.lan.ubrr.ru/issues/37943
     and regexp_like(p_receiver_acc, '^40(101|302|501\d{8}2|601\d{8}[13]|701\d{8}[13]|503\d{8}4|603\d{8}4|703\d{8}4)')
     and (p_bo1 in (2, 4, 11, 23, 26, 28) and substr(p_sender_acc, 6, 3) = '810') -->><< 17.09.2017 ubrr belosheykin 17-473.5
  then
    null;
  else
    -->>18.11.2020  Зеленко С.А.    [20-82101.1]  АБС: Изменение счетов ТОФК с 01.01.2021
    IF ubrr_xxi5.ubrr_change_accounts_tofk.check_tofk_paybikdt(par_type         => p_bo1,
                                                               par_payeraccount => p_sender_acc,
                                                               par_bik_new      => p_receiver_bik)
       and regexp_like(p_receiver_acc,'^('||nvl(PREF.Get_Preference('UBRR_CHANGE_ACCOUNTS_TOFK.CHECK_TAXDETAILS_CACCA'),'03100|03212|03222|03232|03242|03252|03262|03272|03214|03224|03234|03254')||')')  --01.02.2021  Зеленко С.А.    [DKBPA-38]    АБС (2 ЭТАП) : Изменение счетов ТОФК с 01.01.2021
       -->>
       and regexp_like(p_sender_acc, '^4(0[1-7]|0802|0807|0821|2309)')
       and p_sender_acc not like '47416%' -- 27.01.2021 golovatyuk [IM2711913-001] -- исключаем контроль платежей с невыясненных (47416%) Возврат
       --<<
    THEN
      null;
    ELSE
      -->> 23.04.2018 Киселев А.А. [17-1267.1] АБС: Поле 110 в распоряжениях о переводе средств
      --===============================================
      -- для небюджентных платежей:
      -- (если поле 110 имеет некорректный формат) или 1 или пусто
      -- Выводить предупреждающее сообщение
      -- о некорректном формате с указанием требования к формату
      --===============================================
      IF p_110 IS NOT NULL AND p_110 <> '1' AND p_doc_date >= lc_110_Date AND (p_bo2 NOT IN (7,9) OR p_bo2 IS NULL)
        THEN
          l_message_mode := 1;
          p_result_kind  := 1;
          p_result := 'Поле 110 - "Код выплат" может быть пустым или заполнено значением "1"'||chr(10);
          add_message('Поле 110 - "Код выплат" может быть пустым или заполнено значением "1"');
      END IF;
      -->> 23.04.2018 Киселев А.А. [17-1267.1] АБС: Поле 110 в распоряжениях о переводе средств
      return;
    END IF;
    --<<18.11.2020  Зеленко С.А.    [20-82101.1]  АБС: Изменение счетов ТОФК с 01.01.2021
  end if;

-- Если дошли досюда, нужны дальнейшие проверки
-- Найдем ИД плательщика - по-любому пригодится
-- Добавить в описании - если - после прохождения проверок -  указан отсутствующий в базе лицевой счет, то
-- выдаётся критическая ошибка

   select min(a.iacccus) into l_sender_id from  ubrr_acc_v a  -- 15.05.2016 Клейн А.М. ВУЗ: Изменение xxi."acc" на ubrr_acc_v
   where a.caccacc = p_sender_acc and a.caccprizn <> 'З'; -->< 29.03.2016 Портнягин Д.Ю. Поставил букву З вместо цифры 3

   if l_sender_id is null then
     p_result := 'В Cистеме отсутствует плательщик с указанным счетом "' || p_sender_acc ||'"!'||chr(10);
     p_result_kind := 2;
     return;
   end if;

-- Теперь узнаем, является ли плательщик юрлицом либо ИП. Если ни тем ни тем - то не нужен контроль
-- "Если 15/1 - ФЛ, иначе если 15/4 - это ИП, иначе если 15/2 или остальные - это ЮЛ"
  if p_sender_acc like '423%' or p_sender_acc like '426%' or p_sender_acc like '40817%' or p_sender_acc like '40820%' then
    l_sender_kind:= 0;
  else
  select nvl(decode(kind1_fiz, 1,0, (decode(kind4_ip, 1, 1, 2 ))) ,2)
    into l_sender_kind -- 0 - ФЛ, 1- ИП, 2 - ЮЛ
  from (
    select
      sign(sum(decode(igcsnum, 1, 1,0)))  kind1_fiz,
      sign(sum(decode(igcsnum, 4, 1, 0))) kind4_ip
    from gcs
    where igcscat = 15 and igcscus = l_sender_id
  );
  end if;

  -->> 25.04.2017 ubrr korolkov 17-473.1
  select ccusnumnal
  into l_client_inn
  from cus
  where icusnum = l_sender_id;

-->> 24.01.2021 Фридьев П.В. 20-85443 Новая версия IBANK 2020.8.15
--  l_third_partie := p_doc_date >= c_26_04_2017 and p_60 != l_client_inn and p_receiver_acc like '40101%';
-->> Блок отключения 20-85443
if not ubrr_xxi5.code_block.is_block_disabled('20-85443') then
--<< Блок отключения 20-85443
  l_third_partie := p_doc_date >= c_26_04_2017 and p_60 != l_client_inn and substr(p_receiver_acc, 1, 5) in ('40101', '03100');
-->> Блок отключения 20-85443
else
  l_third_partie := p_doc_date >= c_26_04_2017 and p_60 != l_client_inn and p_receiver_acc like '40101%';
end if;
--<< Блок отключения 20-85443
--<< 24.01.2021 Фридьев П.В. 20-85443 Новая версия IBANK 2020.8.15
  --<< 25.04.2017 ubrr korolkov 17-473.1

--  if l_sender_kind = 0 then return; end if; -- физлицам контроль не нужен
  if l_sender_kind = 0 then l_sender_kind := 1; end if; -- физлиц проверяю как ИП


-- "Если отсутствует присвоение категория/группа 7/2 - значит резидент, иначе иностранная организация"
  select
    case when exists (select 1 from gcs where igcscat = 7 and igcsnum = 2 and  igcscus = l_sender_id)
      then 0
      else 1
    end into l_sender_resident -- 1 - резидент, 0 - иностранная организация
  from dual;

  /* Определим, куда будут выводится результаты проверки - в ошибки или в предупреждения */
  if p_form_kind = 0 then
    l_message_mode := 0; -- результаты проверки выводятся как критические ошибки
  elsif p_form_kind = 1 then
    l_message_mode := 1; -- результаты проверки выводятся как предупреждения
                         -- пока переменная l_message_mode не будет переустановлена
  end if;

  -->> 17.09.2017 ubrr belosheykin 17-473.5
  if l_state_021017 = true then
    -->> 1.1
    if p_101 is not null and regexp_like(p_60, '^(\d{5}|\d{10})$') and not regexp_like(p_60, '^(0+)$') then
      if p_102 = '0' then
        add_message('Если  поле Статус составителя (101) заполнено и ИНН плательщика (60) имеет значение '||
                    'из 10 – ти или 5-ти знаков, то  КПП плательщика (102) не может принимать значение '||
                    'ноль "0".');
      end if;
    end if;
    --<< 1.1
    -->> 1.2
    if l_sender_kind in (1, 2) and p_bo1 in (2, 4, 11, 28, 23, 26) and p_101 = '15' then
      --add_message('Поле статус составителя (101) не может принимать значение 15 с указанным БО1.');
      add_message('Для ЮЛ/ИП статус составителя с кодом «15 - Кредитная организация (филиал кредитной '||
                  'организации), платежный агент, организация федеральной почтовой связи, составившие '||
                  'платежное поручение на общую сумму с реестром на перевод денежных средств, принятых '||
                  'от плательщиков - физических лиц»,  не доступен для выбора.');
    end if;
    --<< 1.2
  end if;
  --<< 17.09.2017 ubrr belosheykin 17-473.5

-- p_60 ИНН плательщика
  if p_doc_date < c_25_04_2017 and -- 25.04.2017 ubrr korolkov 17-473.1
     p_60 is null
    -- added
    and p_sender_acc not like '423%'
    and p_sender_acc not like '426%'
    and p_sender_acc not like '40817%'
    and p_sender_acc not like '40820%'
    then --><25.03.2016 Чепель С.А.
    add_message('Реквизит "ИНН плательщика (60)": поле обязательно для ввода.'); -- Проверка 1
  else
    -->> 25.04.2017 ubrr korolkov 17-473.1
    if l_third_partie then
        if not regexp_like(p_60, '^(\d{5}|\d{10}|\d{12}|0)$') then
            add_message('Реквизит "ИНН плательщика (60)": значение реквизита должно содержать 5, 10, 12 знаков (цифр) или быть заполнено нулем ("0")');
        elsif regexp_like(p_60,'^00\d+') then -- не начинается с 00
            add_message('Реквизит "ИНН плательщика (60)": первый и второй знаки (цифры) реквизита не могут одновременно принимать значение ноль ("0").');
        end if;
    else
    --<< 25.04.2017 ubrr korolkov 17-473.1
  -- Проверка 2 - количество знаков
        if (l_sender_resident = 0) then -- иностранная организация
              -->> Чепель С.А. 12.03.2016 Для нерезидента разрешен 10-значный ИНН
          if not regexp_like(p_60, '^\d{5}$') and not regexp_like(p_60, '^\d{10}$') then -- Проверка 2 - количество знаков
            add_message('Реквизит "ИНН плательщика (60)": для иностранной организации должен быть указан код иностранной организации состоящий из 5 или 10 знаков (цифр).');
          elsif p_60 = '00000' or p_60 = '0000000000' then -- Проверка 4 - равенство всех знаков 0
              add_message('Реквизит "ИНН плательщика (60)": значение реквизита не может состоять из нулей.');
              elsif regexp_like(p_60, '^\d{10}$') and regexp_like(p_60,'^00\d+') then
                  add_message('Реквизит "ИНН плательщика (60)": первый и второй знаки (цифры) реквизита не могут одновременно принимать значение ноль ("0").');
          end if;
              --<< Чепель С.А. 12.03.2016 Для нерезидента разрешен 10-значный ИНН
        else --
          if not( (l_sender_kind = 1) /*ИП*/ and regexp_like(p_60, '^\d{12}$') or
                  (l_sender_kind = 2) /*ЮЛ*/ and regexp_like(p_60, '^\d{10}$') )
             -- added
             and p_sender_acc not like '423%'
             and p_sender_acc not like '426%'
             and p_sender_acc not like '40817%'
             and p_sender_acc not like '40820%' --><25.03.2016 Чепель С.А.
             and p_sender_acc not like '40911%'
             and p_sender_acc not like '40912%'
             and p_sender_acc not like '40913%'
          then
            add_message('Реквизит "ИНН плательщика (60)": значение реквизита должно содержать 10 знаков (цифр) для юридического лица и 12 знаков (цифр) для ИП.');
          elsif regexp_like(p_60,'^00\d+') then
              add_message('Реквизит "ИНН плательщика (60)": первый и второй знаки (цифры) реквизита не могут одновременно принимать значение ноль ("0").');
          end if;
        end if;
    end if;
  end if;

  -->> 09.12.2016 Фридьев П.В. https://redmine.lan.ubrr.ru/issues/37829
  -- p_22, p_104
  -- Нельзя указывать в поле 22 УИН значение поля 104 КБК с критичной ошибкой
  -- УИН И КБК одновременно могут быть ="0"
  if p_22 = p_104 and p_22 <> '0' then
    add_message('Значение поля 22 "УИН" не должно совпадать со значе-нием поля 104 "КБК"');
  end if;
  --<< 09.12.2016 Фридьев П.В. https://redmine.lan.ubrr.ru/issues/37829


  -- p_61 ИНН получателя. Условия 5-7
  if p_61 is null then -- Проверка 5
    add_message('Реквизит "ИНН получателя (61)": поле обязательно для ввода.');
  elsif not regexp_like(p_61, '^\d{10}$') then -- Проверка 6 - количество знаков
    add_message('Реквизит "ИНН получателя (61)": значение реквизита должно содержать 10 знаков (цифр).');
  elsif regexp_like(p_61,'^00\d+') then -- Проверка 7 - не начинается с 00
    add_message('Реквизит "ИНН получателя (61)": первый и второй знаки (цифры) реквизита не могут одновременно принимать значение ноль ("0").');
  end if;

  -- p_102 КПП плательщика. 8-10
  if p_102 is null then -- Проверка 8
    add_message('Реквизит "КПП плательщика (102)": поле обязательно для ввода.');
  elsif not (p_102 = '0' or regexp_like(p_102, '^\d{9}$')) then -- Проверка 9 - количество знаков
    add_message('Реквизит "КПП плательщика (102)": значение реквизита должно содержать 9 знаков (цифр) или быть заполнено нулем ("0").');
  elsif regexp_like(p_102,'^00\d+') then -- Проверка 10 - не начинается с 00
    add_message('Реквизит "КПП плательщика (102)": первый и второй знаки (цифры) реквизита не могут одновременно принимать значение ноль ("0").');
  end if;


  -->> 09.12.2016 Фридьев П.В. https://redmine.lan.ubrr.ru/issues/34997
  -- p_102 КПП плательщика
  -- п.4 доработка Клиент-банка: в части указания в поле 102 "КПП плательщика" значения:
  -- - для организаций состоящего из 9 знаков (цифр), при этом первый и
  --   второй знаки (цифры) не могут одновременно принимать значение ноль ("0");
  -- - для индивидуальных предпринимателей - указывается значение ноль ("0").
  -- l_sender_kind: 0 - ФЛ, 1- ИП, 2 - ЮЛ
  -- 10.01.2017 phil Было ограничение по юзеру, так как нужно было распространить на Бухгалтерию, условие снял
  --if user in ('IBANK2', 'CLIENTBANK') then -->><< 14.12.2016 Фридьев П.В. https://redmine.lan.ubrr.ru/issues/37829
    -->> 25.04.2017 ubrr korolkov 17-473.1
    if not l_third_partie then
        if l_sender_kind = 2 then
            If ( (not regexp_like(p_102, '^\d{9}$')) or ( regexp_like(p_102,'^00\d+') ) ) then
                add_message('Реквизит "КПП плательщика (102)": значение реквизита для организации должно содержать 9 знаков (цифр), при этом первый и второй знаки (цифры) реквизита не могут одновременно принимать значение ноль ("0").');
            end if;
        end if;

        If l_sender_kind = 1 and not (p_102 = '0')  then
            add_message('Реквизит "КПП плательщика (102)": для индивидуальных предпринимателей - указывается значение ноль ("0").');
        end if;
    end if;
  --end if; -->><< 14.12.2016 Фридьев П.В. https://redmine.lan.ubrr.ru/issues/37829
  --<< 09.12.2016 Фридьев П.В. https://redmine.lan.ubrr.ru/issues/34997

  -- p_103 КПП получателя - не было в приложениях ТЗ
  if p_103 is null then -- Проверка 8а
    add_message('Реквизит "КПП получателя (103)": поле обязательно для ввода.');
  elsif not (p_103 = '0' or regexp_like(p_103, '^\d{9}$')) then -- Проверка 9а - количество знаков
    add_message('Реквизит "КПП получателя (103)": значение реквизита должно содержать 9 знаков (цифр).');
  elsif regexp_like(p_103,'^00\d+') then -- Проверка 10а - не начинается с 00
    add_message('Реквизит "КПП получателя (103)": первый и второй знаки (цифры) реквизита не могут одновременно принимать значение ноль ("0").');
  end if;


  -- p_104 КБК. 11-13
  if p_104 is null then -- Проверка 11
    add_message('Реквизит "КБК (104)": поле обязательно для ввода.');
  ELSIF regexp_like(p_104, '0{20}$') THEN
    add_message('Реквизит "КБК (104)": все знаки одновременно не могут принимать значение ноль.');
  elsif not (
          (p_104 = '0' and not regexp_like(p_receiver_acc, '^40101') ) or
          (regexp_like(p_104, '^\d{20}$') )
        ) -- Проверка 12,13 - количество знаков
  THEN
    add_message('Реквизит "КБК (104)": значение реквизита должно содержать 20 знаков (цифр), при этом все знаки одновременно не могут принимать значение ноль.');
  end if;

  -- p_105 ОКТМО. 14-17
  if p_105 is null then -- Проверка 11
    add_message('Реквизит "ОКТМО (105)": поле обязательно для ввода.');
  elsif p_doc_date < c_25_04_2017 and -- 25.04.2017 ubrr korolkov 17-473.1
    not (
          (p_105 = '0' and not regexp_like(p_receiver_acc, '^40101') ) or
          regexp_like(p_105, '^\d{8}$') or
          regexp_like(p_105, '^\d{11}$')
        ) -- Проверка 15,16 - количество знаков
  then
    add_message('Реквизит "ОКТМО (105)": значение реквизита должно содержать 8 или 11 знаков (цифр).');
  -->> 25.04.2017 ubrr korolkov 17-473.1
  elsif p_doc_date >= c_25_04_2017 and
    not ( (p_105 = '0' and not regexp_like(p_receiver_acc, '^40101') ) or regexp_like(p_105, '^\d{8}$') ) -- Проверка 15,16 - количество знаков
  then
    add_message('Реквизит "ОКТМО (105)": значение реквизита должно содержать 8 знаков (цифр).');
  --<< 25.04.2017 ubrr korolkov 17-473.1
  elsif length(p_105) > 1 and regexp_like(p_105, '^0+$') then  -- 17 не нули
    add_message('Реквизит "ОКТМО (105)": значение реквизита не может состоять из нулей.');
  end if;

  -- p_22 Код УИН. 18-21
  if p_22 is null then -- Проверка 18
    add_message('Реквизит "Код УИН (22)": поле обязательно для ввода.');
  -->>Чепель С.А. 28.03.2016 Допустимое значение буквы и цифры
  elsif not (p_22 = '0' or regexp_like(p_22,'^[[:print:]]{20}([[:print:]]{5}){0,1}$')) then -- Проверка 19 - количество знаков
  --<<Чепель С.А. 28.03.2016 Допустимое значение буквы и цифры
    add_message('Реквизит "Код УИН (22)": значение реквизита должно содержать 20 или 25 знаков.');
  elsif length(p_22) > 1 and regexp_like(p_22, '^0+$') then  -- 20 не нули
    add_message('Реквизит "Код УИН (22)": значение реквизита не может состоять из нулей.');
  elsif p_22='0' and p_101 in ('09','10','11','12','13','14') and length(p_60)<>12
  then -- 21 Если тип составителя 09-14, то "0" указываем только для ИП !
    add_message('Реквизит "Код УИН (22)": значение реквизита не может быть равно "0".');
  end if;

  -- p_106 Основание платежа. 22-23
  if p_106 is null then -- Проверка 22
    add_message('Реквизит "Основание платежа (106)": поле обязательно для ввода. При отсутствии возможности заполнить реквизит введите "0".');
  elsif p_106 <> '0' then -- Проверка 23 - количество знаков, и нахождение в перечне
    select count(1) into l_cnt from dnv_nalpurp where ccode = p_106;
    if l_cnt = 0 then
      add_message('Реквизит "Основание платежа (106)": значение реквизита должно иметь два знака в соответствии с перечнем оснований платежа.');
    end if;
  end if;


  -- p_107 Налоговый период phil 10.01.2017
  nRes:=1;
  -- Условие по таможке
   If (p_104 like '153%') and
   -->> 17.09.2017 ubrr belosheykin 17-473.5
   ((p_106 in ('0','00','ДЕ','ПО'/*,'КВ'*/,'КТ','ИД','ИП','ТУ','БД','ИН','КП','ДК','ПК','КК','ТК') and l_state_021017 = false)
    or
    (l_state_021017 = true and p_106 in ('0','00','ДЕ','ПО','КТ','ИД','ИП','ТУ',
                                         'БД','ИН','КП','ДК','ПК','КК','ТК','ПД','КВ')))
   --<< 17.09.2017 ubrr belosheykin 17-473.5
   then
    If  length(p_107)=8 then  nRes:=2;  -- по таможке всё выполнено, дальше проверять не надо
    Else nRes:=0; end if; -- ошибка
   end if;

  If nRes=1 then
   case length(p_107)
    when 1 then
     If p_107<>'0' then nRes:=0; -- sMess := 'Для одного символа допустимо только значение = 0';
     end if;
    when 10 then
     If regexp_like(p_107,'\w{2}\.\w{2}\.\w{4}' )  then
      -- Итак, формат подходит, проверка значений
      Case SubSTR(p_107,1,2)
       when 'МС' then -- 'МС.XX.YYYY' XX 01-12
         begin  if SubSTR(p_107,4,2) between 1 and 12 then  nRes:=1; else  nRes:=0; end if;
         exception when others then  nRes:=0; end;
         -- if  nRes=0 then  -- sMess := 'В формате МС.XX.YYYY некорректные значения';   end if;
       when 'КВ' then -- 'КВ.XX.YYYY' XX 01-04
         begin  if SubSTR(p_107,4,2) between 1 and 4 then  nRes:=1; else  nRes:=0; end if;
         exception when others then  nRes:=0; end;
         --if  nRes=0 then -- sMess := 'В формате КВ.XX.YYYY некорректные значения';  end if;
       when 'ПЛ' then -- 'ПЛ.XX.YYYY' XX 01-02
         begin  if SubSTR(p_107,4,2) between 1 and 2 then  nRes:=1; else  nRes:=0; end if;
         exception when others then  nRes:=0; end;
         --if  nRes=0 then -- sMess := 'В формате ПЛ.XX.YYYY некорректные значения';  end if;
       when 'ГД' then -- 'ГД.00.YYYY'
         begin  if SubSTR(p_107,4,2) between 0 and 0 then  nRes:=1; else  nRes:=0; end if;
         exception when others then  nRes:=0; end;
         --if  nRes=0 then -- sMess := 'В формате ГД.00.YYYY некорректные значения';  end if;
       Else -- конкретная дата
        begin  sMess := to_date(p_107,'dd.mm.yyyy'); nRes:=1; exception when others then  nRes:=0; -- sMess := 'Строка из 10 символов не подходит ни под одну маску';
        end;
      end case;
     Else -- CASE 10 символов, маска не подходит под шаблоны
      nRes:=0;  -- sMess := 'формат должен быть XX.XX.XXXX';
     end if;
    Else  -- количество символов другое
     nRes:=0; -- sMess := 'Недопустимое значение';
   end case;
  end if;
 If nRes = 0 then
   -->> 17.09.2017 ubrr belosheykin 17-473.5
   if l_state_021017 = true then
     l_str_err_107 := 'б) значение должно иметь 8 знаков (код таможенного органа, который состоит из 8 цифр без разделительных знаков),   при осуществлении таможенных и иных платежей от внешнеэкономической деятельности: Таможенные и иные платежи от внешнеэкономической деятельности определять по условию, если поле 104 "КБК" начинается на 153%, а поле 106 "Основание платежа" принимает сле-дующие значения: "0", "00", "ДЕ", "ПО", "КТ", "ИД", "ИП", "ТУ", "БД", "ИН", "КП", "ДК", "ПК", "КК", "ТК", "ПД", "КВ".';
   else
     l_str_err_107 := 'б) значение должно иметь 8 знаков (код таможенного органа, который состоит из 8 цифр без разделительных знаков),   при осуществлении таможенных и иных платежей от внешнеэкономической деятельности: Таможенные и иные платежи от внешнеэкономической деятельности определять по условию, если поле 104 "КБК" начинается на 153%, а поле 106 "Основание платежа" принимает сле-дующие значения: "0", "00", "ДЕ", "ПО", "КТ", "ИД", "ИП", "ТУ", "БД", "ИН", "КП", "ДК", "ПК", "КК", "ТК".';
   end if;
   --<< 17.09.2017 ubrr belosheykin 17-473.5
  add_message('Реквизит "Налоговый период (107)" : '||chr(13)||chr(10)|| -- 17.09.2017 ubrr belosheykin 17-473.5
   'а) значение должно иметь 10 знаков, восемь из которых имеют смысловое зна-чение, а два являются разделительными знаками и заполняются точкой ("."); '||chr(13)||chr(10)||
   '   первые два знака показателя могут принимать следующие значения: '||chr(13)||chr(10)||
   '•   "01-31" - если предусмотрена конкретная дата уплаты платежа, то про-ставляется эта дата в формате "ДД.ММ.ГГГГ" (например, "04.09.2014"); '||chr(13)||chr(10)||
   '•   "МС" - месячные платежи, имеют вид "МС.ХХ.УУУУ, где ХХ - номер меся-ца, за который проводится платеж (от 01 до 12), УУУУ - год, за который производится уплата (например, "МС.02.2014"); '||chr(13)||chr(10)||
   '•   "КВ" - квартальные платежи, имеют вид "КВ.ХХ.УУУУ, где ХХ - номер квартала, за который проводится уплата (от 01 до 04), УУУУ - год, за ко-торый производится уплата (например, "КВ.01.2014"); '||chr(13)||chr(10)||
   '•   "ПЛ" - полугодовые платежи, имеют вид "ПЛ.ХХ.УУУУ, где ХХ - принимает значение 01 или 02, в зависимости от того за 1 или за 2 полугодие производится платеж, УУУУ - год, за который производится уплата (например, "ПЛ.02.2014"); '||chr(13)||chr(10)||
   '•   "ГД" - годовые платежи, имеют вид "ГД.00.УУУУ, где УУУУ - год, за кото-рый уплачивается платеж (например, "ГД.00.2014"). '||chr(13)||chr(10)||
   l_str_err_107 ||chr(13)||chr(10)|| -->><< 17.09.2017 ubrr belosheykin 17-473.5
   'в) Значение "Налогового периода" может быть равно нулю "0".');
 end if;



  -- p_108 Идентификатор сведений о физлице или номер документа. 24-26
  if p_108 is null then -- Проверка 24
    add_message('Реквизит "Идентификатор сведений о физическом лице или Номер документа основания платежа (108)": поле обязательно для ввода. При отсутствии возможности заполнить реквизит введите "0".');
  elsif length(p_108)>15 then -- Проверка 25 - количество знаков
    add_message('Реквизит "Идентификатор сведений о физическом лице или Номер документа основания платежа (108)": количество символов не должно превышать 15.');
  elsif p_108 = '0' and p_101 in ('03','16','19','20','24') and p_22='0' and nvl(length(p_60),0)<>12
  then -- 26 Некоторые сочетания только для ИП
    add_message('Реквизит "Идентификатор сведений о физическом лице или Номер документа основания платежа (108)": значение реквизита не может быть равно "0".');
-->>> Ёлгин Ю.А. 03.11.2017 [17-1423] АБС: Поле 108 в бюджетных платежах https://redmine.lan.ubrr.ru/issues/47827#note-6
/*  -->> 03.10.2017 ubrr korolkov 17-473.5
  elsif length(p_108) = 1 and p_108 != '0' and l_state_021017 = true then
    add_message('Реквизит "Идентификатор сведений о физическом лице или Номер документа основания платежа (108)": может содержать значение, состоящее из 1 знака ("0"), либо от 2 до 15 знаков');
  --<< 03.10.2017 ubrr korolkov 17-473.5*/
--<<< Ёлгин Ю.А. 03.11.2017 [17-1423] АБС: Поле 108 в бюджетных платежах https://redmine.lan.ubrr.ru/issues/47827#note-6
  end if;

  -- p_109 Дата документа основания платежа. 27-29
  if p_109 is null then -- 27
    add_message('Реквизит "Дата документа основания платежа (109)": поле обязательно для ввода. Если дата документа осутствует в значении реквизита, укажите "0".');
  elsif length(p_109)>15 then -- 28 - количество знаков
    add_message('Реквизит "Дата документа основания платежа (109)": количество символов не должно превышать 15.');
  elsif p_109<>'0' and not regexp_like(p_109,'^(0[1-9]|[12][0-9]|3[01])[.](0[1-9]|1[012])[.](19|20)\d\d')
  then -- 29 - начало строки имеет вид 'ДД.ММ.ГГГГ'
    -->>18.11.2020        Зеленко С.А.     [20-82101.1]  АБС: Изменение счетов ТОФК с 01.01.2021
    if not ubrr_xxi5.ubrr_check_taxdetails_109(par_sender_acc   => p_sender_acc,
                                               par_receiver_acc => p_receiver_acc,
                                               par_ccreatstatus => p_101,
                                               par_cbudcode     => p_104,
                                               par_cnalpurp     => p_106,
                                               par_cnaldocdate  => p_109) then
      -->>01.02.2021  Зеленко С.А.    [DKBPA-38]    АБС (2 ЭТАП) : Изменение счетов ТОФК с 01.01.2021
      --add_message('Реквизит "Дата документа основания платежа (109)": дата должна иметь вид "ДД.ММ.ГГГГ". Если дата документа осутствует в значении реквизита, укажите "0" или согласно изменения 107н с 01.01.2021 укажите "00".');
      add_message('Реквизит "Дата документа основания платежа (109)": дата должна иметь вид "ДД.ММ.ГГГГ". Укажите "00" в случае, если в реквизите "Показатель основания (106)" указано "00" (для таможенных платежей c 01.01.2021).');
      --<<01.02.2021  Зеленко С.А.    [DKBPA-38]    АБС (2 ЭТАП) : Изменение счетов ТОФК с 01.01.2021
    end if;
    --<<18.11.2020        Зеленко С.А.     [20-82101.1]  АБС: Изменение счетов ТОФК с 01.01.2021
  elsif p_109<>'0' then   --  этот случай не описан в ТЗ, но такие ошибки тоже нужно контролировать.
    l_cnt := 0;
    begin
      c_dummy_date := to_date(substr(p_109,1,10),'dd.mm.rrrr');
      l_cnt := 1;
    exception
      when others then null;
    end;
    if l_cnt = 0 then
      add_message('Реквизит "Дата документа основания платежа (109)": дата должна быть корректной.');
    end if;
  end if;

  /* Оставшиеся результаты проверки выводятся как критические ошибки - независимо от операции */
  --l_message_mode := 0; -- результаты проверки выводятся как критические ошибки - независимо от операции
  -- По 4-й версии ТЗ - у оставшихся не меняется режим вывода

  -- Проверка сочетания двух полей - 30, два реквизита одновременно не могут быть равны нулю
  -- p_22 КОД УИН p_108 Идентификатор сведений о физлице или номер документа.
  if p_101 in ('03','16','19','20','24') and p_108='0' and p_22='0' and length(p_60)<>12 then -- Проверка 30
    add_message('Реквизит "Код УИН (22)", Реквизит "Идентификатор сведений о физическом лице или Номер документа основания платежа (108)": значения реквизитов не могут быть одновременно равны "0".');
  end if;

  -- p_107 Налоговый период  - 31
  if p_101 is not null and p_107 is null then
    add_message('Реквизит "Налоговый период (107)": поле обязательно для ввода.');
  end if;

  -- 10.01.2017 phil Доп условия для признака 107



  -- p_101 Статус составителя  - 32 - Добавлено при тестировании
  if nvl(p_101,'0') = '0' then
    add_message('Реквизит "Статус составителя (101)": поле обязательно для ввода.');
  end if;

  -->> 23.04.2018 Киселев А.А. [17-1267.1] АБС: Поле 110 в распоряжениях о переводе средств
  --===============================================
  -- для бюджетных платежей:  если поле заполнено,
  -- то выводить предупреждающее сообщение:
  -- "Поле 110 - "Код выплат" необязательное к заполнению"
  -- с возможностью права выбора дальнейшей регистрации
  --===============================================
  IF p_110 IS NOT NULL AND p_doc_date >= lc_110_Date AND (p_bo2 NOT IN (7,9) OR p_bo2 IS NULL)
    THEN
      l_message_mode := 1;
      p_result_kind  := 1;
      p_result       := 'Поле 110 - "Код выплат" необязательное к заполнению' || chr(10);
      add_message('Поле 110 - "Код выплат" необязательное к заполнению');
  END IF;
  -->> 23.04.2018 Киселев А.А. [17-1267.1] АБС: Поле 110 в распоряжениях о переводе средств

  if l_error is not null then
    p_result_kind := 2;
    p_result := 'Критичные ошибки:' || chr(10) || l_error;
    if l_warning is not null then
      p_result := substr(p_result ||chr(10)||'Предупреждение:' || chr(10) || l_warning, 1, 4000);
    end if;
  elsif l_warning is not null then
    p_result_kind := 1;
    p_result := 'Предупреждение:' || chr(10) || l_warning;
  else
    p_result_kind := 0;
    p_result := null;
  end if;

end;



procedure check_sel_doc_pars(
  p_form_kind    number,   -- способ обработки,  0 - считать все ошибки критическими
  p_mark_id mrk_id.idmarker%type, -- идентификатор группы отмеченных идентификаторов
  p_doc_id dp_doc.id%type,         -- идентификатор документа
  p_result out varchar2,
  p_result_kind out number -- 0 - ok, 1 - warning, 2 - error
)
is
  l_warning varchar2(4000);
  l_error   varchar2(4000);
  l_result   varchar2(4000);
  l_result_kind number;
  l_cnt_marked number;


begin
  p_result_kind := 0;
  p_result  := null;
  l_warning := null;
  l_error   := null;

  select count(1) into l_cnt_marked
  from dp_doc d
  where d.id in (select m.idrow from mrk_id m where m.idmarker = p_mark_id);

  for x in (
    select
      d.idocnum,
      d.cpayeracc, -- 9
      d.crecipacc, -- 17
      d.crecipmfo,
      d.cpayerinn, -- ИНН плательщика
      d.crecipinn, -- ИНН получателя
      d.cpayerkpp, -- КПП плательщика
      d.crecipkpp, -- КПП получателя
      d.dcreate,   -- 25.04.2017 ubrr korolkov 17-473.1
      d.ITYPE,     -- BO1 -- 17.09.2017 ubrr belosheykin 17-473.5
      i.cbudcode, -- КБК
      i.cokatocode, -- ОКТМО
      i.cdocindex, -- Код УИН
      i.cnalpurp, -- Основание платежа
      i.cnaldocnum, -- Идентификатор сведений о физическом лице или Номер документа основания платежа
      i.cnaldocdate, -- Дата документа основания платежа
      i.ccreatstatus, -- Статус составителя
      i.cnalperiod -- Налоговый период
    from dp_doc d
    left join dp_dept_info i on i.iddoc =  d.id
    where d.id in (
      select m.idrow from mrk_id m where m.idmarker = p_mark_id
      union all
      select p_doc_id from dual where l_cnt_marked = 0
      )
  )
  loop
    check_doc_pars(
      p_form_kind    => p_form_kind,
      p_sender_acc   => x.cpayeracc,    -- 9
      p_receiver_acc => x.crecipacc,    -- 17
      p_receiver_bik => x.crecipmfo,
      p_60           => x.cpayerinn,    -- ИНН плательщика
      p_61           => x.crecipinn,    -- ИНН получателя
      p_102          => x.cpayerkpp,    -- КПП плательщика
      p_103          => x.crecipkpp,    -- КПП получателя
      p_104          => x.cbudcode,     -- КБК
      p_105          => x.cokatocode,   -- ОКТМО
      p_22           => x.cdocindex,    -- Код УИН
      p_106          => x.cnalpurp,     -- Основание платежа
      p_108          => x.cnaldocnum,   -- Идентификатор сведений о физическом лице или Номер документа основания платежа
      p_109          => x.cnaldocdate,  -- Дата документа основания платежа
      p_101          => x.ccreatstatus, -- Статус составителя
      p_107          => x.cnalperiod,   -- Налоговый период

      p_result       => l_result,
      p_result_kind  => l_result_kind,  -- 0 - ok, 1 - warning, 2 - error
      p_doc_date     => x.dcreate,      -- 25.04.2017 ubrr korolkov 17-473.1
      p_bo1          => x.itype        -- BO1 -- 17.09.2017 ubrr belosheykin 17-473.5
      );
    -- Если хоть один с критической ошибкой - весь набор прекращает обрабатываться
    -- Если нет критической ошибки, но есть предупреждение - весь набор требует подтверждения на продолжение
    -- В выходной строке сначала будет информация о платежах с критическими ошибками, затем о платежах без критических, но с предупреждениями
    if l_result_kind = 1 then
      l_warning := substr(l_warning ||'Документ № ' || x.idocnum || chr(10) || l_result || chr(10), 1,4000);
    elsif l_result_kind = 2 then
      l_error := substr(l_error ||'Документ № ' || x.idocnum || chr(10) || l_result || chr(10), 1,4000);
    end if;
  end loop;

  if l_error is not null then
    p_result_kind := 2;
    p_result := l_error;
    if l_warning is not null then
      p_result := substr(p_result ||chr(10) || l_warning, 1, 4000);
    end if;
  elsif l_warning is not null then
    p_result_kind := 1;
    p_result :=  l_warning;
  else
    p_result_kind := 0;
    p_result := null;
  end if;

end;


procedure check_outer_doc_pars(
  p_itrnnum       trn.itrnnum%type,
  p_itrnanum     trn.itrnanum%type,
  p_result out varchar2
)
is
  l_result   varchar2(4000);
  l_result_kind number;

begin

  p_result  := null;

  -- цикл выполнится один раз или не выполнится совсем
  for x in (
    select
      d.ctrnaccd, -- счет плательщика   -- счет дебета
      d.ctrnacca, -- счет получателя
      d.ctrnmfoa, --  БИК получателя,  --  чужой МФО/BIC код
      d.ctrnclient_inn, --   нужен ИНН плательщика
        -- Комментарий к полю из источника:
        -- Для межбанковских документов: ИНН клиента нашего банка (для дебетовых док-ов
        -- плательщик, для кредитовых -- получатель);
        -- для внутрибанковских документов: ИНН дебитора (плательщика)
      d.ctrninna, -- ИНН получателя
      d.ctrnclient_kpp, -- КПП плательщика
      d.ctrnkppa, -- КПП получателя
      d.dtrncreate, -- 25.04.2017 ubrr korolkov 17-473.1
      d.ITRNTYPE, -- BO1 -- 17.09.2017 ubrr belosheykin 17-473.5

      i.cbudcode, -- КБК
      i.cokatocode, -- ОКТМО
      i.cdocindex, -- Код УИН
      i.cnalpurp, -- Основание платежа
      i.cnaldocnum, -- Идентификатор сведений о физическом лице или Номер документа основания платежа
      i.cnaldocdate, -- Дата документа основания платежа
      i.ccreatstatus, -- Статус составителя
      i.cnalperiod, -- Налоговый период
      -->>Чепель С.А.
      d.ctrnclient_acc -- Доп счет плательщика
      --i.inum           -- temp
      --<<Чепель С.А.
    from trn d
    left join trn_dept_info i on i.inum =  d.itrnnum and i.ianum = d.itrnanum
    where d.itrnnum = p_itrnnum
      and d.itrnanum = p_itrnanum
      and d.ITRNPNUM = 'Б'
      and d.ITRNTYPE != 5
/*
-- условия - условные, чтобы посмотреть характер данных, в итоговой будет фильтрация по d.itrnnum,  d.itrnanum
    where dtrntran  between to_date('12.01.2015','DD.MM.YYYY') and to_date('13.01.2015','DD.MM.YYYY')
      and ctrnmfoo!='046577795' and ctrnmfoa != 'UTRBRU4EXXX'-- like '%001'
      and ctrnacca like '40101%'
*/
  )
  loop
      -->>Чепель С.А.
      if x.ctrnaccd like '30302%' then
        if x.ctrnclient_acc is not null then
          x.ctrnaccd:= x.ctrnclient_acc;
        end if;
      end if;
      --<<Чепель С.А.
    check_doc_pars(
      p_form_kind    => 0,
      p_sender_acc   => x.ctrnaccd,         -- 9
      p_receiver_acc => x.ctrnacca,         -- 17
      p_receiver_bik => x.ctrnmfoa,
      p_60           => x.ctrnclient_inn,   -- ИНН плательщика
      p_61           => x.ctrninna,         -- ИНН получателя
      p_102          => x.ctrnclient_kpp,   -- КПП плательщика
      p_103          => x.ctrnkppa,         -- КПП получателя
      p_104          => x.cbudcode,         -- КБК
      p_105          => x.cokatocode,       -- ОКТМО
      p_22           => x.cdocindex,        -- Код УИН
      p_106          => x.cnalpurp,         -- Основание платежа
      p_108          => x.cnaldocnum,       -- Идентификатор сведений о физическом лице или Номер документа основания платежа
      p_109          => x.cnaldocdate,      -- Дата документа основания платежа
      p_101          => x.ccreatstatus,     -- Статус составителя
      p_107          => x.cnalperiod,       -- Налоговый период
      p_doc_date     => x.dtrncreate,       -- 25.04.2017 ubrr korolkov 17-473.1
      p_bo1          => x.Itrntype,         -- BO1 -- 17.09.2017 ubrr belosheykin 17-473.5

      p_result       => l_result,
      p_result_kind  => l_result_kind -- 0 - ok, 1 - warning, 2 - error
      );
/*
      if x.inum is null then
        l_result:= 'нет записи в trn_dept_info '||l_result;
      end if;
*/
  end loop;

  p_result := l_result;

end;



procedure check_trc(
  p_form_kind    number,   -- способ обработки,  0 - считать все ошибки критическими
  p_itrcnum      trc.itrcnum%type,
  p_itrcanum     trc.itrcanum%type,
  p_result out varchar2,
  p_result_kind out number -- 0 - ok, 1 - warning, 2 - error
)
is
  l_result   varchar2(4000);
  l_result_kind number;

BEGIN
  UBRR_CD_DEBUG_PKG.write_info('FORM.DOCUMENT.WRITEOFF', 'check_trc: p_form_kind = ' || p_form_kind || ' p_itrcnum='||p_itrcnum || ' p_itrcanum='||p_itrcanum   );
  p_result  := null;

  -- цикл выполнится один раз или не выполнится совсем
  for x in (
    select
      d.ctrcaccd, -- счет плательщика   -- счет дебета
      d.ctrcacca, -- счет получателя
      d.ctrcmfoa, --  БИК получателя,  --  чужой МФО/BIC код
      d.ctrcclient_inn, --   нужен ИНН плательщика
      d.ctrcinna, -- ИНН получателя
      d.ctrcclient_kpp, -- КПП плательщика
      d.ctrckppa, -- КПП получателя
      d.dtrccreate, -- 25.04.2017 ubrr korolkov 17-473.1
      d.ITRCTYPE, -- BO1 -- 17.09.2017 ubrr belosheykin 17-473.5
      i.cbudcode, -- КБК
      i.cokatocode, -- ОКТМО
      i.cdocindex, -- Код УИН
      i.cnalpurp, -- Основание платежа
      i.cnaldocnum, -- Идентификатор сведений о физическом лице или Номер документа основания платежа
      i.cnaldocdate, -- Дата документа основания платежа
      i.ccreatstatus, -- Статус составителя
      i.cnalperiod -- Налоговый период
    from "trc" d,
          trc_dept_info i
    where d.itrcnum = p_itrcnum
    and d.itrcanum = p_itrcanum
    AND i.inum (+)=  d.itrcnum
    and i.ianum (+)= d.itrcanum
  )
  LOOP
    UBRR_CD_DEBUG_PKG.write_info('FORM.DOCUMENT.WRITEOFF', 'check_doc_pars: p_form_kind = ' || p_form_kind || ' p_itrcnum='||p_itrcnum || ' p_itrcanum='||p_itrcanum   );
    check_doc_pars(
      p_form_kind    => check_trc.p_form_kind,
      p_sender_acc   => x.ctrcaccd,         -- 9
      p_receiver_acc => x.ctrcacca,         -- 17
      p_receiver_bik => x.ctrcmfoa,
      p_60           => x.ctrcclient_inn,   -- ИНН плательщика
      p_61           => x.ctrcinna,         -- ИНН получателя
      p_102          => x.ctrcclient_kpp,   -- КПП плательщика
      p_103          => x.ctrckppa,         -- КПП получателя
      p_104          => x.cbudcode,         -- КБК
      p_105          => x.cokatocode,       -- ОКТМО
      p_22           => x.cdocindex,        -- Код УИН
      p_106          => x.cnalpurp,         -- Основание платежа
      p_108          => x.cnaldocnum,       -- Идентификатор сведений о физическом лице или Номер документа основания платежа
      p_109          => x.cnaldocdate,      -- Дата документа основания платежа
      p_101          => x.ccreatstatus,     -- Статус составителя
      p_107          => x.cnalperiod,       -- Налоговый период
      p_doc_date     => x.dtrccreate,       -- 25.04.2017 ubrr korolkov 17-473.1
      p_bo1          => x.Itrctype,         -- BO1 -- 17.09.2017 ubrr belosheykin 17-473.5

      p_result       => l_result,
      p_result_kind  => l_result_kind       -- 0 - ok, 1 - warning, 2 - error
      );
  end loop;

  p_result_kind := l_result_kind;
  p_result := l_result;
end;

end;
/
